
////////////////////////////////////////////////////////
// 按照行为分类
1. 病毒
2. 木马
3. 蠕虫
4. 漏洞利用
5. 下载器
6. 加密勒索
7. 投放器（dropper）
8. 注入程序
9. auto-rooter
10.工具包
11.垃圾邮件发送程序
12.洪泛攻击
13.键盘记录
14.rootkit
15.广告软件
16.间谍软件（信息窃取）

////////////////////////////////////////////////////////
// 病毒命名规范
[<malware_type>://][<platform>/]<family_name>[.<group_name>][.<infective_length>][.<variant>[<davolution>]][<modifers>]

////////////////////////////////////////////////////////
// 环境依赖性
1. 计算机体系依赖性
2. CPU依赖性
3. 操作系统依赖性
4. 操作系统版本依赖性
5. 文件系统依赖性：簇病毒/NTFS流病毒/NTFS压缩病毒/ISO镜像文件病毒
6. 文件格式依赖性：DOS-COM/DOS-EXE/16位Windows/OS_2/32位Windows/UNIX上ELF病毒/设备驱动程序病毒/目标代码和库文件病毒
7. 解释环境依赖性：
微软产品宏病毒/IBM系统REXX病毒/DEC_VMS上DCL病毒/UNIX上shell脚本/Windows上VBS病毒/批处理病毒/mIRC_PIRCH脚本即使消息病毒/
SuperLogo病毒/JS病毒/Perl病毒/Python病毒/VIM病毒/EMACS病毒/TCL病毒/PHP病毒/MapInfo病毒/SAP上ABAP病毒/Windows帮助文档病毒/
PDF中JS病毒/AppleScript病毒/ANSI的依存关系/MacromediaFlash动作脚本病毒/HyperTalk脚本威胁/AutoLisp病毒/注册表依赖性/
PIF和LNK的依赖性/LotusWord中宏病毒/AmiPro的文档病毒/Corel病毒/Lotus宏病毒/Windows安装脚本病毒/AUTORUN.INF和WindowsINFFile病毒/
HTML病毒
8. 系统漏洞依赖性
9. 日期和时间依赖性
10.JIT依赖性：Microsoft.Net病毒
11.档案文件格式依赖性
12.基于扩展名的文件格式依赖性
13.网络协议依赖性
14.源代码依赖关系
15.Mac和Palm平台资源依赖性
16.宿主大小依赖性
17.调试器依赖性
18.编译器和连接器依赖性 
19.设备翻译层依赖性
20.嵌入式对象插入依赖性
21.自包含环境的依赖性
22.复合病毒

////////////////////////////////////////////////////////
// 病毒特征
1.静态检测的方法
特征码扫描：特征匹配的方法，利用特征串完成检测
广谱特征：将特征码进行分段，通过掩码字节对需要进行比较的和不需要进行比较的区段进行划分
启发式扫描：利用已有的经验和知识对未知的二进制代码进行检测，抓住恶意代码特定的恶意行为
2.动态检测的方法
vm虚拟机：通过虚拟机执行一定数量的步条匹配特征行为

////////////////////////////////////////////////////////
// 参考
1. 《计算机病毒防范艺术》
2. 《恶意代码分析实战》
3. 《0day安全-软件漏洞分析技术》


