# 汇编中的C代码结构

1.全局与局部变量 
全局变量通过内存地址引用，局部变量通过栈地址引用
全局变量调用：
mov eax,dword_40CF60
add eax,dword_40C000
mov dword_40CF60,eax
mov ecx,dword_40CF60
push exc
push offset aTotalD; "total=%d\n"
call printf
局部变量调用：
mov dword ptr[ebp-4],1
mov dword ptr[ebp-8],2
mov eax,[ebp-4]
add eax,[ebp-8]
mov [ebp-4],eax
mov ecx,[ebp-4]
push ecx
push offset aTotalD; "total=%d\n"
call printf

2.反汇编算术操作
C:
int a = 0;
int b = 1;
a = a + 11;
a = a - b;
a--;
b++;
b = a % 3;
Asm:
mov [ebp+var_4],0
mov [ebp+var_8],1
mov eax,[ebp+var_4]
add eax,0Bh
mov [ebp+var_4],eax
mov ecx,[ebp+var_4]
sub ecx,[ebp+var_8]
mov [ebp+var_4],ecx
mov edx,[ebp+var_4]
sub edx,1
mov [ebp+var_4],edx
mov eax,[ebp+var_8]
add eax,1
mov [ebp+var_8],eax
mov eax,[ebp+var_4]
cdq
mov ecx,3
idiv ecx
mov [ebp+var_8],edx
